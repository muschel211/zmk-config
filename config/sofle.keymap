/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#define NEO1 0
#define QWERTZ 1
#define CONFIG 2
#define NEO2 3
#define NEO3 4

/ {
    keymap {
        compatible = "zmk,keymap";

        neo1_layer {
            bindings = <
  &kp F1    &kp F2     &kp F3    &kp F4  &kp F5      &kp F6                            &kp F7    &kp F8       &kp F9   &kp F10  &kp F11    &kp F12
 &kp ESC     &kp X      &kp V     &kp L   &kp C       &kp W                             &kp K     &kp H        &kp G     &kp F    &kp Q  &kp MINUS
 &kp TAB     &kp U      &kp I     &kp A   &kp E       &kp O                             &kp S     &kp N        &kp R     &kp T    &kp D      &kp Z
  &tog 1  &kp LBKT   &kp SEMI   &kp SQT   &kp P       &kp Y  &kp S  &kp S      &kp B     &kp M  &commaminus   &kp DOT    &kp J     &tog 2
                    &kp LCTRL  &kp RALT   &mo 4  &kp LSHIFT       &mo 3    &kp RET  &kp SPACE  &kp BSPC      &kp DEL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS) &inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        qwertz_layer {
            bindings = <
  &kp F1  &kp F2     &kp F3    &kp F4    &kp F5      &kp F6                            &kp F7    &kp F8     &kp F9   &kp F10       &kp F11   &kp F12
 &kp ESC   &kp Q      &kp W     &kp E     &kp R       &kp T                             &kp Y     &kp U      &kp I     &kp O         &kp P  &kp LBKT
 &kp TAB   &kp A      &kp S     &kp D     &kp F       &kp G                             &kp H     &kp J      &kp K     &kp L      &kp SEMI   &kp SQT
  &tog 1   &kp Z      &kp X     &kp C     &kp V       &kp B  &kp S  &kp S      &kp N     &kp M  &kp COMMA   &kp DOT  &kp KP_MINUS    &tog 2
                  &kp LCTRL  &kp LALT  &kp RALT  &kp LSHIFT    &kp CAPS    &kp RET  &kp SPACE  &kp BSPC    &kp DEL  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS) &inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        config_layer {
            bindings = <
 &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4           &kp F6                                       &kp F7      &kp F8    &kp F9     &kp F10    &kp F11         &kp F12
   &bt BT_CLR           &trans           &trans           &trans           &trans           &trans                                    &kp PG_UP     &kp END    &kp UP    &kp HOME    &kp INS          &trans
       &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI                                    &kp PG_DN    &kp LEFT  &kp DOWN   &kp RIGHT    &kp DEL  &mt RCTRL CLCK
       &trans       &bt BT_CLR  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI       &trans       &trans           &kp SLCK  &kp C_PREV  &kp C_PP  &kp C_NEXT  &kp S          &tog 2
                                         &trans           &trans           &trans           &trans  &bootloader  &bootloader  &ext_power EP_TOG      &trans    &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS) &inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        neo2_layer {
            bindings = <
 &kp N1         &kp N2         &kp N3        &kp N4        &kp N5         &kp N6                                &kp N7          &kp N8        &kp N9      &kp N0         &trans     &trans
 &trans        &punkte  &kp RS(SLASH)    &kp RA(N8)    &kp RA(N9)      &kp GRAVE                            &kp LS(N1)        &kp NUBS  &kp LS(NUBS)  &kp LS(N0)     &kp LS(N6)       &klf
 &trans  &kp RA(MINUS)     &kp RS(N7)    &kp RA(N7)    &kp RA(N0)   &kp RS(RBKT)                         &kp RS(MINUS)      &kp RS(N8)    &kp RS(N9)   &kp SLASH    &kp RS(DOT)  &kp RA(Q)
 &trans       &kp NUHS     &kp RS(N4)  &kp RA(NUBS)  &kp RA(RBKT)  &kp RS(EQUAL)  &kp S  &kp S       &kp RBKT      &kp RS(N5)    &kp RS(N2)   &kp EQUAL  &kp RS(COMMA)     &trans
                            &kp LCTRL      &kp LALT         &mo 4     &kp LSHIFT       &mo 3    &kp RET      &kp SPACE  &mt BSPC EQUAL       &kp DEL    &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS) &inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };

        neo3_layer {
            bindings = <
  &kp F1     &kp F2     &kp F3    &kp F4     &kp F5      &kp F6                             &kp F7     &kp F8     &kp F9  &kp KP_DIVIDE  &kp KP_MULTIPLY       &kp F12
 &kp ESC  &kp PG_UP   &kp BSPC    &kp UP    &kp DEL   &kp PG_DN                              &kp K  &kp KP_N7  &kp KP_N8      &kp KP_N9      &kp KP_PLUS  &kp KP_MINUS
 &kp TAB   &kp HOME   &kp LEFT  &kp DOWN  &kp RIGHT     &kp END                              &kp S  &kp KP_N4  &kp KP_N5      &kp KP_N6     &kp KP_COMMA    &kp KP_DOT
  &tog 1    &kp ESC    &kp TAB   &kp SQT  &kp ENTER  &kp K_UNDO  &kp S  &kp S  &kp LSHIFT  &kp KP_N1  &kp KP_N2      &kp KP_N3            &kp J        &tog 2
                     &kp LCTRL  &kp LALT      &mo 4  &kp LSHIFT       &mo 3    &kp RET   &kp SPACE  &kp KP_N0    &kp DEL       &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp LC(KP_PLUS) LC(KP_MINUS) &inc_dec_kp LC(KP_PLUS) LC(KP_MINUS)>;
        };
    };
};

/ {
    behaviors {
        commaminus: comma_minus {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_MINUS";
            #binding-cells = <0>;
            bindings =
                <&kp COMMA>,
                <&kp KP_MINUS>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
    macros {
        punkte: punkte {
            label = "ZM_punkte";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N3>,
                <&macro_release>,
                <&kp LALT>;
        };
        klf: klf {
            label = "ZM_klf";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N3 &kp KP_N1>,
                <&macro_release>,
                <&kp LALT>;
        };
        snip: snip {
            label = "ZM_snip";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
              <&macro_press &kp LSHFT &kp LGUI >
			, <&macro_tap &kp S>
			, <&macro_release &kp LSHFT &kp LGUI>;
        };
    };
};
